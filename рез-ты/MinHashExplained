====================================
Результаты бенчмарков MinHash
====================================

Окружение:
- JMH 1.37
- JVM: OpenJDK 11.0.27 (HotSpot)
- Warmup: 5 итераций по 10 c
- Измерение: 5 итераций по 10 c
- Threads: 1
- Benchmark mode: Average time (ms/op)
- Параметры: numDocs=100, numHash=64, setSize=800, universe=50000

-------------------------------
Вводные цифры (средние значения)
-------------------------------
testBuildSignatures     ≈ 5.87 ms/op
testEstimateSimilarity  ≈ 1e-5 ms/op (практически мгновенно)

-------------------------
Интерпретация результатов
-------------------------

1. **testBuildSignatures (~5.9 ms на корпус из 100 документов)**
   - Здесь измеряется построение сигнатур МинХеша для всех документов (100 множеств по 800 элементов).
   - Время стабильное и низкое: менее 6 миллисекунд на весь корпус.
   - Это соответствует ~0.06 ms на один документ, что показывает эффективность реализации.

2. **testEstimateSimilarity (~1e-5 ms)**
   - Оценка жаккардового сходства по двум готовым сигнатурам.
   - Практически мгновенная операция: десятки наносекунд.
   - Это ожидаемо, так как сравнение двух массивов фиксированной длины (64 позиции) выполняется за O(numHash).

----------------------
Общие выводы
----------------------
- Построение сигнатур относительно дешёвое и линейное по числу документов и размеру множеств.
- Сравнение сигнатур — сверхбыстрое, оно может выполняться в реальном времени без заметных накладных расходов.
- Основное время в задачах с MinHash уходит именно на построение сигнатур, а не на оценку сходства.
- С увеличением numHash (например, до 128 или 256) ожидается линейный рост времени построения, но операции сравнения останутся дешёвыми.

